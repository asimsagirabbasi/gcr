<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Office extends \App\Entities\Office implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'id', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'officeName', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'address1', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'address2', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'city', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'state', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'country', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'pincode', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'email', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'contactNo', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'contactPerson', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'headOffice', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'isActive', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'sortOrder', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'deleted', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'createdAt', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'id', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'officeName', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'address1', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'address2', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'city', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'state', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'country', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'pincode', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'email', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'contactNo', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'contactPerson', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'headOffice', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'isActive', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'sortOrder', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'deleted', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'createdAt', '' . "\0" . 'App\\Entities\\Office' . "\0" . 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Office $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getOfficeName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOfficeName', []);

        return parent::getOfficeName();
    }

    /**
     * {@inheritDoc}
     */
    public function setOfficeName($officeName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOfficeName', [$officeName]);

        return parent::setOfficeName($officeName);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', []);

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', [$address]);

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getSortOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSortOrder', []);

        return parent::getSortOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setSortOrder($sortOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSortOrder', [$sortOrder]);

        return parent::setSortOrder($sortOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress1', []);

        return parent::getAddress1();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress1($address1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress1', [$address1]);

        return parent::setAddress1($address1);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress2', []);

        return parent::getAddress2();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress2($address2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress2', [$address2]);

        return parent::setAddress2($address2);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', []);

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', [$state]);

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getPincode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPincode', []);

        return parent::getPincode();
    }

    /**
     * {@inheritDoc}
     */
    public function setPincode($pincode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPincode', [$pincode]);

        return parent::setPincode($pincode);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getContactNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContactNo', []);

        return parent::getContactNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setContactNo($contactNo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContactNo', [$contactNo]);

        return parent::setContactNo($contactNo);
    }

    /**
     * {@inheritDoc}
     */
    public function getContactPerson()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContactPerson', []);

        return parent::getContactPerson();
    }

    /**
     * {@inheritDoc}
     */
    public function setContactPerson($contactPerson)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContactPerson', [$contactPerson]);

        return parent::setContactPerson($contactPerson);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeadOffice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeadOffice', []);

        return parent::getHeadOffice();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeadOffice($headOffice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeadOffice', [$headOffice]);

        return parent::setHeadOffice($headOffice);
    }

    /**
     * {@inheritDoc}
     */
    public function getisActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getisActive', []);

        return parent::getisActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', [$isActive]);

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', []);

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

}
